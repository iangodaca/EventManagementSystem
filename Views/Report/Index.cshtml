﻿@using Microsoft.EntityFrameworkCore
@model List<EventManagementSystem.Models.Entities.Report>

@{
    ViewData["Title"] = "Monthly Event Report";
}

<div class="container mx-auto p-6">
    <h1 class="text-3xl font-bold mb-6">Monthly Event Summary</h1>

    <!-- Filters -->
    <form method="get" class="mb-4 bg-white p-4 rounded shadow">
        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Search Title</label>
                <input type="text" name="search" value="@ViewBag.Search" class="form-control" />
            </div>
            <div class="col-md-3">
                <label class="form-label">Category</label>
                <input type="text" name="category" value="@ViewBag.Category" class="form-control" />
            </div>
            <div class="col-md-3">
                <label class="form-label">From Date</label>
                <input type="date" name="fromDate" value="@ViewBag.FromDate" class="form-control" />
            </div>
            <div class="col-md-3">
                <label class="form-label">To Date</label>
                <input type="date" name="toDate" value="@ViewBag.ToDate" class="form-control" />
            </div>
            <div class="col-md-12 text-end">
                <button type="submit" class="btn btn-primary mt-2">Filter</button>
            </div>
        </div>
    </form>

    <!-- Dashboard Stats: Total Events, Users, etc. -->
    <div class="d-flex justify-content-lg-around gap-4 mt-3">
        <div class="bg-white p-4 rounded shadow text-center w-100">
            <h5 class="font-semibold text-lg">Total Events</h5>
            <p class="text-xl font-bold">@Model.Sum(r => r.Events.Count)</p>
        </div>

        <div class="bg-white p-4 rounded shadow text-center w-100">
            <h5 class="font-semibold text-lg">Total Completed Events</h5>
            <p class="text-xl font-bold">@Model.SelectMany(r => r.Events).Count(e => e.Status == "Completed")</p>
        </div>

        <div class="bg-white p-4 rounded shadow text-center w-100">
            <h5 class="font-semibold text-lg">Total Upcoming Events</h5>
            <p class="text-xl font-bold">@Model.SelectMany(r => r.Events).Count(e => e.Status == "Upcoming")</p>
        </div>

    </div>
    <div class="d-flex justify-content-lg-around mt-3 gap-4">
        <div class="bg-white p-4 rounded shadow text-center w-50" style="height:350px">
            <canvas id="categoryPieChart" width="400" height="400"></canvas>
        </div>

        <!-- Bar Chart: Events by Month -->
        <div class="bg-white p-4 rounded shadow text-center w-100" style="height:350px">
            <canvas id="eventsBarChart" width="400" height="400"></canvas>
        </div>
    </div>

    <!-- Pie Chart: Event Categories -->
    <!-- Table: Monthly Event List -->
    <div class="bg-white p-4 rounded shadow text-center w-100 mt-3">
        @foreach (var month in Model)
        {
            <h2 class="text-xl font-semibold mb-3">@($"{month.Year}-{month.Month:D2}")</h2>
            <table class="w-100 bg-white border border-gray-200 shadow-sm mb-2">
                <thead class="bg-gray-100 text-sm font-semibold">
                    <tr>
                        <th class="text-left px-4 py-2">Event Title</th>
                        <th class="text-left px-4 py-2">Date</th>
                        <th class="text-left px-4 py-2">Attendee Count</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ev in month.Events)
                    {
                        <tr class="border-t hover:bg-gray-50">
                            <td class="px-4 py-2">@ev.Title</td>
                            <td class="px-4 py-2">@ev.Date.ToString("yyyy-MM-dd")</td>
                            <td class="px-4 py-2">@ev.AttendeeCount</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>

<script>
    // Pie Chart: Event Categories
    const categoryPieChartCtx = document.getElementById('categoryPieChart').getContext('2d');
    new Chart(categoryPieChartCtx, {
        type: 'pie',
        data: {
            labels: @Html.Raw(Json.Serialize(ViewBag.CategoryLabels)),
            datasets: [{
                data: @Html.Raw(Json.Serialize(ViewBag.CategoryData)),
                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4CAF50', '#FF9800'],
                hoverOffset: 4
            }]
        }
    });

    // Bar Chart: Total Events by Month
    const eventsBarChartCtx = document.getElementById('eventsBarChart').getContext('2d');
    new Chart(eventsBarChartCtx, {
        type: 'bar',
        data: {
            labels: @Html.Raw(Json.Serialize(ViewBag.Months)),
            datasets: [{
                label: 'Total Events',
                data: @Html.Raw(Json.Serialize(ViewBag.TotalEventsByMonth)),
                backgroundColor: '#4CAF50',
                borderColor: '#388E3C',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                x: { beginAtZero: true }
            }
        }
    });
</script>
